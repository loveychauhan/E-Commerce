import { createContext, useState } from "react";
import { products } from "../assets/assets";

export const ShopContext = createContext();

function ShopContextProvider({ children }) {
  const [cartItem, setCardItem] = useState({});
  const [cartQuantity, setCartQuantity] = useState(0);
  const [prevQuantity, setPrevQuantity] = useState(0);

  const addToCart = (id, size) => {
    if (!size) {
      return alert("select a size");
    }
    let cartData = structuredClone(cartItem);

    if (cartData[id]) {
      if (cartData[id][size]) {
        console.log("else with id same size");
        cartData[id][size] += 1;
        setCartQuantity((prev) => prev + 1);
      } else {
        console.log("else with id different size");
        cartData[id][size] = 1;
        setCartQuantity((prev) => prev + 1);
      }
    } else {
      console.log("else without id");
      cartData[id] = {};
      cartData[id][size] = 1;
      setCartQuantity((prev) => prev + 1);
    }
    setCardItem(cartData);
  };

  const updateQuantity = (id, size, quantity) => {
    let cardData = structuredClone(cartItem);
    cardData[id][size] = quantity;

    if (quantity === 0) {
      setCartQuantity((prev) => prev - quantity);
    }
    if (quantity > prevQuantity) {
      setCartQuantity((prev) => prev + 1);
    } else {
      setCartQuantity((prev) => prev - 1);
    }

    setCardItem(cardData);
    setPrevQuantity(quantity);
  };

  // console.log("prevQuantity", prevQuantity);
  // console.log(cartQuantity);
  const obj = {
    products,
    addToCart,
    cartItem,
    cartQuantity,
    updateQuantity,
  };
  return <ShopContext.Provider value={obj}>{children}</ShopContext.Provider>;
}

export default ShopContextProvider;
